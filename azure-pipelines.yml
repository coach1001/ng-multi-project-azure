# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
- name: ngProjects
  type: object
  default:
    - project: 'project-a'
      build: true
      test: true
      publishTestResults: true
      deployToOcto: true
    - project: 'project-b'
      build: true
      test: false
      publishTestResults: false
      deployToOcto: true

trigger:
- main

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- task: NodeTool@0
  displayName: 'Install NodeJS'
  inputs:
    versionSpec: '14.15.5'
- task: YarnInstaller@3
  displayName: 'Install Yarn'
  inputs:
    versionSpec: '1.x'
- script: |
    node build-script.js
  displayName: 'Check Commit Message for Project Filter'
  env:
    ${{ each value in parameters.ngProjects }}:
      ${{ format('NG_PROJECT_{0}', upper(value.project)) }}: ${{ value.project }}
    BUILD_COMMIT_MESSAGE: $(Build.SourceVersionMessage)
- script: |
    npm install -g @angular/cli
  displayName: 'Install Angular CLI'
- task: Yarn@3
  displayName: Install Node Dependencies
  inputs:
    arguments: 'install'
- ${{ each value in parameters.ngProjects }}:
  - ${{ if and(contains(variables.NG_PROJECTS, '${{ value.project }}'), ${{ value.build }}) }}:
    - script: |
        ng build ${{ value.project }} --prod
      displayName: 'Building Project - ${{ value.project }}'
      condition: and(contains(variables.NG_PROJECTS, '${{ value.project }}'), ${{ value.build }})
    - script: | 
        ng test ${{ value.project }} --browsers=ChromeHeadless --code-coverage --progress=false --watch=false 
      displayName: 'Test Project - ${{ value.project }}'
      condition: and(contains(variables.NG_PROJECTS, '${{ value.project }}'), ${{ value.test }})
